import{S as g,i as w,a as _,l as $,A as y,m as S,p as x,B as P,j as f,q as A,d as E,C,n as U,h as v,f as R,D as q}from"../chunks/index.a1b1e1bc.js";import{F as H,f as I}from"../chunks/fa.5e0f40b0.js";import{s as b}from"../chunks/error-handler.2c73d00e.js";function k(s){let n,e,t;return e=new H({props:{icon:I,spin:!0}}),{c(){n=$("div"),y(e.$$.fragment),this.h()},l(r){n=S(r,"DIV",{class:!0});var o=x(n);P(e.$$.fragment,o),o.forEach(f),this.h()},h(){A(n,"class","fixed inset-0 flex h-full w-full items-center justify-center text-7xl")},m(r,o){E(r,n,o),C(e,n,null),t=!0},p:U,i(r){t||(v(e.$$.fragment,r),t=!0)},o(r){R(e.$$.fragment,r),t=!1},d(r){r&&f(n),q(e)}}}function d(s,n,e){window.opener&&window.opener.postMessage({type:"failure",payload:{message:n,detail:`${n}
${e}`}},s)}function m(s,n,e,t,r=!1,o){if(window.opener){if(!n||!e||!t||r&&!o){d(s,"A required authentication property was not found",`Had Token: ${!!n}
Had Expiration: ${!!e}
Had Scope"${!!t}${r?`
Had Refresh Token"${!!o}`:""}`);return}window.opener.postMessage({type:"auth",payload:{accessToken:n,scope:t,expiration:Date.now()+(Number.parseInt(e,10)-600)*1e3,refreshToken:o}},s)}}function u(s,n){return new Promise((e,t)=>{if(!window.opener)return;const r=new MessageChannel;r.port1.onmessage=({data:o})=>{r.port1.close(),o.error?t(new Error(o.error)):e(o.result)},window.opener.postMessage(n,s,[r.port2])})}function L(s){async function n(){const e=new URL(window.location.href),t=new URLSearchParams(e.hash.substring(1)),r=t.has("error_description")||t.has("error"),o=`${e.origin}${e.pathname}`;if(r)d(e.origin,"Authorization failed",t.get("error_description")||t.get("error")||"Unknown error");else if(e.searchParams.has("code")){const a=new URLSearchParams,{clientId:p,clientSecret:l,sendSecret:c,tokenEndpoint:h}=await u(e.origin,{type:"getAuthVariables"});a.append("grant_type","authorization_code"),a.append("redirect_uri",o),a.append("client_id",p),c&&l&&a.append("client_secret",l),a.append("code",e.searchParams.get("code")||""),a.append("code_verifier",await u(e.origin,{type:"getCodeVerifier"})),fetch(h,{method:"POST",body:a.toString(),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(async i=>{if(!i.ok)throw new Error(await b(i));return i.json()}).then(i=>{m(e.origin,i.access_token,i.expires_in,i.scope,!0,i.refresh_token)}).catch(i=>{d(e.origin,"Code authorization request failed",i.message)})}else if(t.has("access_token"))m(e.origin,t.get("access_token"),t.get("expires_in"),t.get("scope"),!1);else if(e.searchParams.has("ttu-init-auth")){const a=new URLSearchParams,{clientId:p,clientSecret:l,authEndpoint:c,tokenEndpoint:h,scope:i}=await u(e.origin,{type:"getAuthVariables"});if(!p||!i||!c)return d(e.origin,"A required authentication input was not found",`ClientId: ${!!p}
Scope: ${!!i}
AuthEndpoint: ${!!c}`);a.append("client_id",p),a.append("redirect_uri",o),a.append("scope",i),l&&h?(a.append("response_type","code"),a.append("access_type","offline"),a.append("code_challenge_method","S256"),a.append("code_challenge",await u(e.origin,{type:"getCodeChallenge"})),a.append("prompt","consent")):a.append("response_type","token"),window.location.assign(`${c}?${a.toString()}`)}else e.searchParams.has("ttu-init-wait")||d(e.origin,"Unexpected authentication context",`Url: ${e.href}
Hash: ${e.hash||"-"}`)}return n(),[]}class z extends g{constructor(n){super(),w(this,n,L,k,_,{})}}export{z as default};
